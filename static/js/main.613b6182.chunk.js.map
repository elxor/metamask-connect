{"version":3,"sources":["components/Header/Header.js","components/Info/Info.js","components/Modal/Modal.js","utils/helpers.js","App.js","index.js","components/Info/Info.module.css","components/Modal/Modal.module.css","components/Header/Header.module.css"],"names":["Header","props","className","classes","header","content","title","connected","address","slice","button","onClick","Info","data","contentWrapper","info","text","balance","symbol","network","Modal","useState","document","createElement","portal","useEffect","body","appendChild","style","overflow","removeChild","createPortal","modal","e","stopPropagation","close","closeWrap","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","x1","y1","x2","y2","href","target","rel","link","linkInner","src","alt","getBalance","ethereum","a","request","method","finalBalance","web3Utils","hexToNumberString","fromWei","getNetwork","chainIdOut","chainIdLocal","chainId","Promise","resolve","result","getData","accountsOut","accounts","App","window","isMetaMaskInstall","isConnected","state","setState","initialize","then","isMetaMask","console","account","catch","error","log","on","_chainId","warn","ReactDOM","render","StrictMode","getElementById","module","exports"],"mappings":"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","file":"static/js/main.613b6182.chunk.js","sourcesContent":["import React from 'react';\r\nimport classes from './Header.module.css';\r\n\r\nconst Header = (props) => {\r\n\r\n    return (\r\n        <div className={classes.header}>\r\n            <div className={`${classes.content} container`}>\r\n                <h1 className={classes.title}>MetaMask Connect</h1>\r\n                {props.connected\r\n                    ? <div className={classes.address}>\r\n                        {props.address.slice(0, 7) + '...' + props.address.slice(-8)}\r\n                    </div>\r\n                    : <button\r\n                        className={classes.button}\r\n                        onClick={props.onClick}\r\n                        >Connect to metamask\r\n                    </button>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport classes from './Info.module.css';\r\n\r\nconst Info = ({data}) => {\r\n    return (\r\n        <div className={classes.contentWrapper}>\r\n            <div className={classes.content}>\r\n                <h2 className={classes.title}>Account Information</h2>\r\n                {data.connected\r\n                    ? <div className={classes.info}>\r\n                        <div>\r\n                            <p className={classes.text}>Address:</p>\r\n                            <p className={`wordwrap ${classes.text}`}>\r\n                                {data.address}\r\n                            </p>\r\n                        </div>\r\n                        <div>\r\n                            <p className={classes.text}>\r\n                                Balance: <span>{data.balance} {data.symbol}</span>\r\n                            </p>\r\n                        </div>\r\n                        <div>\r\n                            <p className={classes.text}>Network: <span>{data.network}</span></p>\r\n                        </div>\r\n                    </div>\r\n                    : <div className={classes.text}>\r\n                        <p>Information is not available</p>\r\n                        <p>Please connect to metamask</p>\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Info;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport classes from './Modal.module.css';\r\n\r\nconst Modal = (props) => {\r\n    const [portal] = useState(() => document.createElement('div'));\r\n\r\n    useEffect(() => {\r\n        document.body.appendChild(portal);\r\n        document.body.style.overflow = 'hidden';\r\n\r\n        return () => {\r\n            document.body.removeChild(portal);\r\n            document.body.style.overflow = 'auto';\r\n        }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    return createPortal(\r\n        <div className={classes.modal} onClick={props.onClick}>\r\n            <div className={classes.content} onClick={e => e.stopPropagation()}>\r\n                <div className={classes.close}>\r\n                    <div className={classes.closeWrap} onClick={props.onClick}>\r\n                        <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"3\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line><line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line></svg>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <p className={classes.title}>\r\n                        MetaMask not installed!\r\n                    </p>\r\n                    <a\r\n                        href=\"https://metamask.io/\"\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                        className={classes.link}\r\n                    >\r\n                        <div className={classes.linkInner}>\r\n                            <p>Install Metamask</p>\r\n                            <img src=\"metamask.png\" alt=\"metamask-logo\" />\r\n                        </div>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </div>,\r\n        portal\r\n    );\r\n}\r\n\r\nexport default Modal;\r\n","import web3Utils from 'web3-utils';\r\n\r\n\r\nexport const getBalance = async (ethereum, address) => {\r\n    const balance = await ethereum.request({\r\n        method: 'eth_getBalance', \r\n        \"params\": [address, 'latest']\r\n    });\r\n\r\n    const finalBalance = web3Utils.hexToNumberString(balance);\r\n\r\n    return web3Utils.fromWei(finalBalance, 'ether');\r\n}\r\n\r\n\r\nexport const getNetwork = async (ethereum, chainIdOut) => {\r\n    let chainIdLocal;\r\n\r\n    if (chainIdOut) {\r\n        chainIdLocal = chainIdOut;\r\n        \r\n    } else {\r\n        const chainId = await ethereum.request({\r\n            method: 'eth_chainId'\r\n        });\r\n\r\n        chainIdLocal = chainId;\r\n    }\r\n\r\n    const result = await new Promise(resolve => {\r\n        switch (chainIdLocal) {\r\n            case '0x1':\r\n                resolve(['Mainnet', 'ETH']);\r\n                break;\r\n            case '0x3':\r\n                resolve(['Ropsten', 'ROP']);\r\n                break;\r\n            case '0x2a':\r\n                resolve(['Kovan', 'KOV']);\r\n                break;\r\n            case '0x4':\r\n                resolve(['Rinkeby', 'RIN']);\r\n                break;\r\n            case '0x5':\r\n                resolve(['Goerli', 'GoETH']);\r\n                break;\r\n            default:\r\n                resolve(['']);\r\n                break;\r\n        }\r\n    });\r\n\r\n    return result;\r\n}\r\n\r\n\r\nexport const getData = async (ethereum, accountsOut) => {\r\n    if (accountsOut) {\r\n        const [network, symbol] = await getNetwork(ethereum);\r\n        return [accountsOut[0], network, symbol];\r\n\r\n    } else {\r\n        const accounts = await ethereum.request({\r\n            method: 'eth_accounts'\r\n        });\r\n\r\n        if (accounts[0]) {\r\n            const [network, symbol] = await getNetwork(ethereum);\r\n            return [accounts[0], network, symbol];\r\n\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n}","import React, { Fragment, useState, useEffect } from 'react';\nimport Header from './components/Header/Header';\nimport Info from './components/Info/Info';\nimport Modal from './components/Modal/Modal';\nimport { getData, getNetwork, getBalance } from './utils/helpers';\n\n\nfunction App() {\n    const { ethereum } = window;\n\n    const [state, setState] = useState({\n        modal: false,\n        address: '',\n        balance: '',\n        network: '',\n        symbol: '',\n        isMetaMaskInstall: false,\n        isConnected: false\n    });\n\n\n    useEffect(() => {\n        initialize();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n\n    useEffect(() => {\n        if (state.address !== '') {\n            getBalance(ethereum, state.address).then(\n                result => {\n                    setState(state => ({\n                        ...state,\n                        balance: result\n                    }));\n                }\n            );\n        } else {\n            setState(state => ({\n                ...state,\n                balance: ''\n            }));\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [state.address, state.network]);\n\n\n    const initialize = () => {\n        if (ethereum && ethereum.isMetaMask) {\n            console.info('Metamask installed!');\n\n            setState(state => ({\n                ...state,\n                isMetaMaskInstall: true\n            }));\n\n            getData(ethereum).then(result => {\n                if (result) {\n                    const [account, network, symbol] = result;\n\n                    setState(state => ({\n                        ...state,\n                        address: account,\n                        network,\n                        symbol,\n                        isConnected: true\n                    }));\n\n                } else {\n                    setState(state => ({\n                        ...state,\n                        isConnected: false\n                    }));\n                }\n            }).catch((error) => {\n                console.log(error);\n            });\n\n            ethereum.on('chainChanged', (_chainId) => {\n                getNetwork(ethereum, _chainId).then(result => {\n                    const [network, symbol] = result;\n\n                    setState(state => ({\n                        ...state,\n                        network,\n                        symbol\n                    }));\n                });\n            });\n            \n            ethereum.on('accountsChanged', (accounts) => {\n                if (accounts[0]) {\n                    setState(state => ({\n                        ...state,\n                        address: accounts[0]\n                    }));\n                } else {\n                    setState(state => ({\n                        ...state,\n                        address: '',\n                        network: '',\n                        isConnected: false\n                    }));\n                }\n            });\n\n        } else {\n            console.warn('Metamask not installed!');\n\n            setState(state => ({\n                ...state,\n                isMetaMaskInstall: false\n            }));\n        }\n    }\n\n\n    const connectClickHandler = () => {\n        if (state.isMetaMaskInstall) {\n\n            ethereum.request({method: 'eth_requestAccounts'})\n                .then(result => getData(ethereum, result))\n                .then(result => {\n                    const [account, network, symbol] = result;\n\n                    setState(state => ({\n                        ...state,\n                        address: account,\n                        network,\n                        symbol,\n                        isConnected: true\n                    }));\n\n                }).catch((error) => {\n                    console.log(error);\n                });\n\n        } else {\n            console.warn('Please install MetaMask!');\n            setState(state => ({...state, modal: true}));\n        }\n    }\n\n\n    const modalToogleHandler = () => {\n        setState(state => ({...state, modal: !state.modal}));\n    }\n\n\n    return (\n        <Fragment>\n            <Header\n                address={state.address}\n                connected={state.isConnected}\n                onClick={connectClickHandler}\n            />\n            <div className=\"container\">\n                <Info\n                    data = {{\n                        address: state.address,\n                        balance: state.balance,\n                        network: state.network,\n                        symbol: state.symbol,\n                        connected: state.isConnected\n                    }}\n                />\n            </div>\n            {state.modal && <Modal onClick={modalToogleHandler} />}\n        </Fragment>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentWrapper\":\"Info_contentWrapper__3sPpU\",\"content\":\"Info_content__ICVW0\",\"info\":\"Info_info__3MZwM\",\"title\":\"Info_title__2l307\",\"text\":\"Info_text__iD0I_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"Modal_modal__UFZEo\",\"content\":\"Modal_content__2-k1a\",\"close\":\"Modal_close__1KxnH\",\"closeWrap\":\"Modal_closeWrap__10AfT\",\"title\":\"Modal_title__1U0P3\",\"link\":\"Modal_link__Co1wv\",\"linkInner\":\"Modal_linkInner__1s1eB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__l8kqj\",\"title\":\"Header_title__1lEE8\",\"content\":\"Header_content__3FruL\",\"button\":\"Header_button__1CzvA\",\"address\":\"Header_address__3Na-n\"};"],"sourceRoot":""}